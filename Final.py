new_array = input("Введите строки через запятую: ").split(", ")

result_array = []
for s in new_array:
    if len(s) <= 3:
        result_array.append(s)

print("Результат:", result_array)


# 2. Нарисовать блок-схему алгоритма (можно обойтись блок-схемой основной содержательной части, если вы выделяете её в отдельный метод)
# 3. Снабдить репозиторий оформленным текстовым описанием решения (файл README.md)
# 5. Использовать контроль версий в работе над этим небольшим проектом (3-4 коммита)



# 3.	git add <файл> - Добавление файла в индекс.
# 4.	git commit -m "Сообщение коммита" - Создание коммита с сообщением.
# 7.	git branch - Просмотр списка веток.
# 8.	git checkout <ветка> - Переключение на другую ветку.
# 10.	git pull - Получение изменений с удаленного репозитория.
# 11.	git push - Отправка изменений в удаленный репозиторий.
# 1.	git branch <новая_ветка> - Создание новой ветки.
# 2.	git branch -d <ветка> - Удаление ветки.
# 3.	git checkout -b <новая_ветка> - Создание и переключение на новую ветку.
# 4.	git merge <ветка> - Слияние указанной ветки с текущей.
# Работа с удаленными репозиториями
# 1.	git remote add <имя> <ссылка> - Добавление удаленного репозитория.
# 2.	git clone <url репозитория> -Клонирование чужого репозитория на локальный ПК.
# 3.	git fetch <удаленный> - Получение изменений из удаленного репозитория.
# 4.	git pull <удаленный> <ветка> - Получение изменений с удаленной ветки.
# 5.	git push <удаленный> <ветка> - Отправка изменений на удаленную ветку.
